<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [debug\dsbl.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image debug\dsbl.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Fri Jul 28 10:24:19 2023
<BR><P>
<H3>Maximum Stack Usage =        376 bytes + Unknown(Functions without stacksize, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
reinvoke &rArr; main &rArr; BOARD_InitDebugConsole &rArr; DbgConsole_Init &rArr; HAL_UartInit &rArr; USART_Init &rArr; USART_SetBaudRate &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[0]">Reset_Handler</a>
 <LI><a href="#[a1]">ACMP_DriverIRQHandler</a>
 <LI><a href="#[9f]">ADC0_DriverIRQHandler</a>
 <LI><a href="#[a0]">ADC1_DriverIRQHandler</a>
 <LI><a href="#[cc]">Analog_Glitch_DriverIRQHandler</a>
 <LI><a href="#[4]">BusFault_Handler</a>
 <LI><a href="#[b4]">CAN0_IRQ0_DriverIRQHandler</a>
 <LI><a href="#[b5]">CAN0_IRQ1_DriverIRQHandler</a>
 <LI><a href="#[c5]">CDOG_DriverIRQHandler</a>
 <LI><a href="#[f9]">CSSV2_ERR_DriverIRQHandler</a>
 <LI><a href="#[ca]">CSS_IRQ1_DriverIRQHandler</a>
 <LI><a href="#[93]">CTIMER0_DriverIRQHandler</a>
 <LI><a href="#[94]">CTIMER1_DriverIRQHandler</a>
 <LI><a href="#[ad]">CTIMER2_DriverIRQHandler</a>
 <LI><a href="#[96]">CTIMER3_DriverIRQHandler</a>
 <LI><a href="#[ae]">CTIMER4_DriverIRQHandler</a>
 <LI><a href="#[d3]">DAC0_DriverIRQHandler</a>
 <LI><a href="#[d4]">DAC1_DriverIRQHandler</a>
 <LI><a href="#[d5]">DAC2_DriverIRQHandler</a>
 <LI><a href="#[8a]">DMA0_DriverIRQHandler</a>
 <LI><a href="#[c3]">DMA1_DriverIRQHandler</a>
 <LI><a href="#[a2]">DMIC_DriverIRQHandler</a>
 <LI><a href="#[8]">DebugMon_Handler</a>
 <LI><a href="#[10c]">DefaultISR</a>
 <LI><a href="#[ef]">ENC0_COMPARE_DriverIRQHandler</a>
 <LI><a href="#[f0]">ENC0_HOME_DriverIRQHandler</a>
 <LI><a href="#[f2]">ENC0_IDX_DriverIRQHandler</a>
 <LI><a href="#[f1]">ENC0_WDG_DriverIRQHandler</a>
 <LI><a href="#[f3]">ENC1_COMPARE_DriverIRQHandler</a>
 <LI><a href="#[f4]">ENC1_HOME_DriverIRQHandler</a>
 <LI><a href="#[f6]">ENC1_IDX_DriverIRQHandler</a>
 <LI><a href="#[f5]">ENC1_WDG_DriverIRQHandler</a>
 <LI><a href="#[ff]">FLASH_DriverIRQHandler</a>
 <LI><a href="#[d9]">FLEXPWM0_CAPTURE_DriverIRQHandler</a>
 <LI><a href="#[dc]">FLEXPWM0_COMPARE0_DriverIRQHandler</a>
 <LI><a href="#[de]">FLEXPWM0_COMPARE1_DriverIRQHandler</a>
 <LI><a href="#[e0]">FLEXPWM0_COMPARE2_DriverIRQHandler</a>
 <LI><a href="#[e2]">FLEXPWM0_COMPARE3_DriverIRQHandler</a>
 <LI><a href="#[da]">FLEXPWM0_FAULT_DriverIRQHandler</a>
 <LI><a href="#[dd]">FLEXPWM0_RELOAD0_DriverIRQHandler</a>
 <LI><a href="#[df]">FLEXPWM0_RELOAD1_DriverIRQHandler</a>
 <LI><a href="#[e1]">FLEXPWM0_RELOAD2_DriverIRQHandler</a>
 <LI><a href="#[e3]">FLEXPWM0_RELOAD3_DriverIRQHandler</a>
 <LI><a href="#[db]">FLEXPWM0_RELOAD_ERROR_DriverIRQHandler</a>
 <LI><a href="#[e4]">FLEXPWM1_CAPTURE_DriverIRQHandler</a>
 <LI><a href="#[e7]">FLEXPWM1_COMPARE0_DriverIRQHandler</a>
 <LI><a href="#[e9]">FLEXPWM1_COMPARE1_DriverIRQHandler</a>
 <LI><a href="#[eb]">FLEXPWM1_COMPARE2_DriverIRQHandler</a>
 <LI><a href="#[ed]">FLEXPWM1_COMPARE3_DriverIRQHandler</a>
 <LI><a href="#[e5]">FLEXPWM1_FAULT_DriverIRQHandler</a>
 <LI><a href="#[e8]">FLEXPWM1_RELOAD0_DriverIRQHandler</a>
 <LI><a href="#[ea]">FLEXPWM1_RELOAD1_DriverIRQHandler</a>
 <LI><a href="#[ec]">FLEXPWM1_RELOAD2_DriverIRQHandler</a>
 <LI><a href="#[ee]">FLEXPWM1_RELOAD3_DriverIRQHandler</a>
 <LI><a href="#[e6]">FLEXPWM1_RELOAD_ERROR_DriverIRQHandler</a>
 <LI><a href="#[b0]">FlexSPI0_DriverIRQHandler</a>
 <LI><a href="#[bd]">Freqme_DriverIRQHandler</a>
 <LI><a href="#[8b]">GINT0_DriverIRQHandler</a>
 <LI><a href="#[8c]">GINT1_DriverIRQHandler</a>
 <LI><a href="#[d6]">HSCMP0_DriverIRQHandler</a>
 <LI><a href="#[d7]">HSCMP1_DriverIRQHandler</a>
 <LI><a href="#[d8]">HSCMP2_DriverIRQHandler</a>
 <LI><a href="#[a3]">HWVAD0_DriverIRQHandler</a>
 <LI><a href="#[c7]">I3C_DriverIRQHandler</a>
 <LI><a href="#[f7]">ITRC_DriverIRQHandler</a>
 <LI><a href="#[92]">MRT0_DriverIRQHandler</a>
 <LI><a href="#[3]">MemManage_Handler</a>
 <LI><a href="#[af]">OS_EVENT_DriverIRQHandler</a>
 <LI><a href="#[8d]">PIN_INT0_DriverIRQHandler</a>
 <LI><a href="#[8e]">PIN_INT1_DriverIRQHandler</a>
 <LI><a href="#[8f]">PIN_INT2_DriverIRQHandler</a>
 <LI><a href="#[90]">PIN_INT3_DriverIRQHandler</a>
 <LI><a href="#[a9]">PIN_INT4_DriverIRQHandler</a>
 <LI><a href="#[aa]">PIN_INT5_DriverIRQHandler</a>
 <LI><a href="#[ab]">PIN_INT6_DriverIRQHandler</a>
 <LI><a href="#[ac]">PIN_INT7_DriverIRQHandler</a>
 <LI><a href="#[c0]">PKC_DriverIRQHandler</a>
 <LI><a href="#[fa]">PKC_ERR_DriverIRQHandler</a>
 <LI><a href="#[c2]">POWERQUAD_DriverIRQHandler</a>
 <LI><a href="#[c1]">PUF_DriverIRQHandler</a>
 <LI><a href="#[100]">RAM_PARITY_ECC_ERR_DriverIRQHandler</a>
 <LI><a href="#[a6]">RTC_DriverIRQHandler</a>
 <LI><a href="#[f8]">Reserved127_DriverIRQHandler</a>
 <LI><a href="#[fb]">Reserved130_DriverIRQHandler</a>
 <LI><a href="#[fc]">Reserved131_DriverIRQHandler</a>
 <LI><a href="#[fd]">Reserved132_DriverIRQHandler</a>
 <LI><a href="#[fe]">Reserved133_DriverIRQHandler</a>
 <LI><a href="#[a7]">Reserved46_DriverIRQHandler</a>
 <LI><a href="#[b1]">Reserved56_DriverIRQHandler</a>
 <LI><a href="#[b2]">Reserved57_DriverIRQHandler</a>
 <LI><a href="#[b3]">Reserved58_DriverIRQHandler</a>
 <LI><a href="#[b7]">Reserved62_DriverIRQHandler</a>
 <LI><a href="#[b8]">Reserved63_DriverIRQHandler</a>
 <LI><a href="#[b9]">Reserved64_DriverIRQHandler</a>
 <LI><a href="#[c6]">Reserved77_DriverIRQHandler</a>
 <LI><a href="#[c8]">Reserved79_DriverIRQHandler</a>
 <LI><a href="#[c9]">Reserved80_DriverIRQHandler</a>
 <LI><a href="#[cd]">Reserved84_DriverIRQHandler</a>
 <LI><a href="#[ce]">Reserved85_DriverIRQHandler</a>
 <LI><a href="#[cf]">Reserved86_DriverIRQHandler</a>
 <LI><a href="#[d0]">Reserved87_DriverIRQHandler</a>
 <LI><a href="#[d1]">Reserved88_DriverIRQHandler</a>
 <LI><a href="#[d2]">Reserved89_DriverIRQHandler</a>
 <LI><a href="#[95]">SCT0_DriverIRQHandler</a>
 <LI><a href="#[bb]">SEC_GPIO_INT0_IRQ0_DriverIRQHandler</a>
 <LI><a href="#[bc]">SEC_GPIO_INT0_IRQ1_DriverIRQHandler</a>
 <LI><a href="#[ba]">SEC_HYPERVISOR_CALL_DriverIRQHandler</a>
 <LI><a href="#[be]">SEC_VIO_DriverIRQHandler</a>
 <LI><a href="#[bf]">SHA_DriverIRQHandler</a>
 <LI><a href="#[b6]">SPI_FILTER_DriverIRQHandler</a>
 <LI><a href="#[6]">SecureFault_Handler</a>
 <LI><a href="#[cb]">Tamper_DriverIRQHandler</a>
 <LI><a href="#[a5]">USB0_DriverIRQHandler</a>
 <LI><a href="#[a4]">USB0_NEEDCLK_DriverIRQHandler</a>
 <LI><a href="#[91]">UTICK0_DriverIRQHandler</a>
 <LI><a href="#[5]">UsageFault_Handler</a>
 <LI><a href="#[a8]">WAKEUP_DriverIRQHandler</a>
 <LI><a href="#[89]">WDT_BOD_DriverIRQHandler</a>
 <LI><a href="#[1]">NMI_Handler</a>
 <LI><a href="#[7]">SVC_Handler</a>
 <LI><a href="#[9]">PendSV_Handler</a>
 <LI><a href="#[a]">SysTick_Handler</a>
 <LI><a href="#[b]">WDT_BOD_IRQHandler</a>
 <LI><a href="#[c]">DMA0_IRQHandler</a>
 <LI><a href="#[d]">GINT0_IRQHandler</a>
 <LI><a href="#[e]">GINT1_IRQHandler</a>
 <LI><a href="#[f]">PIN_INT0_IRQHandler</a>
 <LI><a href="#[10]">PIN_INT1_IRQHandler</a>
 <LI><a href="#[11]">PIN_INT2_IRQHandler</a>
 <LI><a href="#[12]">PIN_INT3_IRQHandler</a>
 <LI><a href="#[13]">UTICK0_IRQHandler</a>
 <LI><a href="#[14]">MRT0_IRQHandler</a>
 <LI><a href="#[15]">CTIMER0_IRQHandler</a>
 <LI><a href="#[16]">CTIMER1_IRQHandler</a>
 <LI><a href="#[17]">SCT0_IRQHandler</a>
 <LI><a href="#[18]">CTIMER3_IRQHandler</a>
 <LI><a href="#[1a]">FLEXCOMM1_IRQHandler</a>
 <LI><a href="#[1b]">FLEXCOMM2_IRQHandler</a>
 <LI><a href="#[1c]">FLEXCOMM3_IRQHandler</a>
 <LI><a href="#[1d]">FLEXCOMM4_IRQHandler</a>
 <LI><a href="#[1e]">FLEXCOMM5_IRQHandler</a>
 <LI><a href="#[1f]">FLEXCOMM6_IRQHandler</a>
 <LI><a href="#[20]">FLEXCOMM7_IRQHandler</a>
 <LI><a href="#[21]">ADC0_IRQHandler</a>
 <LI><a href="#[22]">ADC1_IRQHandler</a>
 <LI><a href="#[23]">ACMP_IRQHandler</a>
 <LI><a href="#[24]">DMIC_IRQHandler</a>
 <LI><a href="#[25]">HWVAD0_IRQHandler</a>
 <LI><a href="#[26]">USB0_NEEDCLK_IRQHandler</a>
 <LI><a href="#[27]">USB0_IRQHandler</a>
 <LI><a href="#[28]">RTC_IRQHandler</a>
 <LI><a href="#[29]">Reserved46_IRQHandler</a>
 <LI><a href="#[2a]">WAKEUP_IRQHandler</a>
 <LI><a href="#[2b]">PIN_INT4_IRQHandler</a>
 <LI><a href="#[2c]">PIN_INT5_IRQHandler</a>
 <LI><a href="#[2d]">PIN_INT6_IRQHandler</a>
 <LI><a href="#[2e]">PIN_INT7_IRQHandler</a>
 <LI><a href="#[2f]">CTIMER2_IRQHandler</a>
 <LI><a href="#[30]">CTIMER4_IRQHandler</a>
 <LI><a href="#[31]">OS_EVENT_IRQHandler</a>
 <LI><a href="#[32]">FlexSPI0_IRQHandler</a>
 <LI><a href="#[33]">Reserved56_IRQHandler</a>
 <LI><a href="#[34]">Reserved57_IRQHandler</a>
 <LI><a href="#[35]">Reserved58_IRQHandler</a>
 <LI><a href="#[36]">CAN0_IRQ0_IRQHandler</a>
 <LI><a href="#[37]">CAN0_IRQ1_IRQHandler</a>
 <LI><a href="#[38]">SPI_FILTER_IRQHandler</a>
 <LI><a href="#[39]">Reserved62_IRQHandler</a>
 <LI><a href="#[3a]">Reserved63_IRQHandler</a>
 <LI><a href="#[3b]">Reserved64_IRQHandler</a>
 <LI><a href="#[3c]">SEC_HYPERVISOR_CALL_IRQHandler</a>
 <LI><a href="#[3d]">SEC_GPIO_INT0_IRQ0_IRQHandler</a>
 <LI><a href="#[3e]">SEC_GPIO_INT0_IRQ1_IRQHandler</a>
 <LI><a href="#[3f]">Freqme_IRQHandler</a>
 <LI><a href="#[40]">SEC_VIO_IRQHandler</a>
 <LI><a href="#[41]">SHA_IRQHandler</a>
 <LI><a href="#[42]">PKC_IRQHandler</a>
 <LI><a href="#[43]">PUF_IRQHandler</a>
 <LI><a href="#[44]">POWERQUAD_IRQHandler</a>
 <LI><a href="#[45]">DMA1_IRQHandler</a>
 <LI><a href="#[46]">FLEXCOMM8_IRQHandler</a>
 <LI><a href="#[47]">CDOG_IRQHandler</a>
 <LI><a href="#[48]">Reserved77_IRQHandler</a>
 <LI><a href="#[49]">I3C_IRQHandler</a>
 <LI><a href="#[4a]">Reserved79_IRQHandler</a>
 <LI><a href="#[4b]">Reserved80_IRQHandler</a>
 <LI><a href="#[4c]">CSS_IRQ1_IRQHandler</a>
 <LI><a href="#[4d]">Tamper_IRQHandler</a>
 <LI><a href="#[4e]">Analog_Glitch_IRQHandler</a>
 <LI><a href="#[4f]">Reserved84_IRQHandler</a>
 <LI><a href="#[50]">Reserved85_IRQHandler</a>
 <LI><a href="#[51]">Reserved86_IRQHandler</a>
 <LI><a href="#[52]">Reserved87_IRQHandler</a>
 <LI><a href="#[53]">Reserved88_IRQHandler</a>
 <LI><a href="#[54]">Reserved89_IRQHandler</a>
 <LI><a href="#[55]">DAC0_IRQHandler</a>
 <LI><a href="#[56]">DAC1_IRQHandler</a>
 <LI><a href="#[57]">DAC2_IRQHandler</a>
 <LI><a href="#[58]">HSCMP0_IRQHandler</a>
 <LI><a href="#[59]">HSCMP1_IRQHandler</a>
 <LI><a href="#[5a]">HSCMP2_IRQHandler</a>
 <LI><a href="#[5b]">FLEXPWM0_CAPTURE_IRQHandler</a>
 <LI><a href="#[5c]">FLEXPWM0_FAULT_IRQHandler</a>
 <LI><a href="#[5d]">FLEXPWM0_RELOAD_ERROR_IRQHandler</a>
 <LI><a href="#[5e]">FLEXPWM0_COMPARE0_IRQHandler</a>
 <LI><a href="#[5f]">FLEXPWM0_RELOAD0_IRQHandler</a>
 <LI><a href="#[60]">FLEXPWM0_COMPARE1_IRQHandler</a>
 <LI><a href="#[61]">FLEXPWM0_RELOAD1_IRQHandler</a>
 <LI><a href="#[62]">FLEXPWM0_COMPARE2_IRQHandler</a>
 <LI><a href="#[63]">FLEXPWM0_RELOAD2_IRQHandler</a>
 <LI><a href="#[64]">FLEXPWM0_COMPARE3_IRQHandler</a>
 <LI><a href="#[65]">FLEXPWM0_RELOAD3_IRQHandler</a>
 <LI><a href="#[66]">FLEXPWM1_CAPTURE_IRQHandler</a>
 <LI><a href="#[67]">FLEXPWM1_FAULT_IRQHandler</a>
 <LI><a href="#[68]">FLEXPWM1_RELOAD_ERROR_IRQHandler</a>
 <LI><a href="#[69]">FLEXPWM1_COMPARE0_IRQHandler</a>
 <LI><a href="#[6a]">FLEXPWM1_RELOAD0_IRQHandler</a>
 <LI><a href="#[6b]">FLEXPWM1_COMPARE1_IRQHandler</a>
 <LI><a href="#[6c]">FLEXPWM1_RELOAD1_IRQHandler</a>
 <LI><a href="#[6d]">FLEXPWM1_COMPARE2_IRQHandler</a>
 <LI><a href="#[6e]">FLEXPWM1_RELOAD2_IRQHandler</a>
 <LI><a href="#[6f]">FLEXPWM1_COMPARE3_IRQHandler</a>
 <LI><a href="#[70]">FLEXPWM1_RELOAD3_IRQHandler</a>
 <LI><a href="#[71]">ENC0_COMPARE_IRQHandler</a>
 <LI><a href="#[72]">ENC0_HOME_IRQHandler</a>
 <LI><a href="#[73]">ENC0_WDG_IRQHandler</a>
 <LI><a href="#[74]">ENC0_IDX_IRQHandler</a>
 <LI><a href="#[75]">ENC1_COMPARE_IRQHandler</a>
 <LI><a href="#[76]">ENC1_HOME_IRQHandler</a>
 <LI><a href="#[77]">ENC1_WDG_IRQHandler</a>
 <LI><a href="#[78]">ENC1_IDX_IRQHandler</a>
 <LI><a href="#[79]">ITRC_IRQHandler</a>
 <LI><a href="#[7a]">Reserved127_IRQHandler</a>
 <LI><a href="#[7b]">CSSV2_ERR_IRQHandler</a>
 <LI><a href="#[7c]">PKC_ERR_IRQHandler</a>
 <LI><a href="#[7d]">Reserved130_IRQHandler</a>
 <LI><a href="#[7e]">Reserved131_IRQHandler</a>
 <LI><a href="#[7f]">Reserved132_IRQHandler</a>
 <LI><a href="#[80]">Reserved133_IRQHandler</a>
 <LI><a href="#[81]">FLASH_IRQHandler</a>
 <LI><a href="#[82]">RAM_PARITY_ECC_ERR_IRQHandler</a>
</UL>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[a1]">ACMP_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[23]">ACMP_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[9f]">ADC0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[21]">ADC0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[a0]">ADC1_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[22]">ADC1_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[cc]">Analog_Glitch_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[4e]">Analog_Glitch_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[b4]">CAN0_IRQ0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[36]">CAN0_IRQ0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[b5]">CAN0_IRQ1_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[37]">CAN0_IRQ1_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[c5]">CDOG_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[47]">CDOG_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[f9]">CSSV2_ERR_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[7b]">CSSV2_ERR_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[ca]">CSS_IRQ1_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[4c]">CSS_IRQ1_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[93]">CTIMER0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[15]">CTIMER0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[94]">CTIMER1_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[16]">CTIMER1_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[ad]">CTIMER2_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[2f]">CTIMER2_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[96]">CTIMER3_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[18]">CTIMER3_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[ae]">CTIMER4_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[30]">CTIMER4_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[d3]">DAC0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[55]">DAC0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[d4]">DAC1_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[56]">DAC1_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[d5]">DAC2_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[57]">DAC2_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[8a]">DMA0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[c]">DMA0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[c3]">DMA1_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[45]">DMA1_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[a2]">DMIC_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[24]">DMIC_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[8]">DebugMon_Handler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[ef]">ENC0_COMPARE_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[71]">ENC0_COMPARE_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[f0]">ENC0_HOME_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[72]">ENC0_HOME_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[f2]">ENC0_IDX_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[74]">ENC0_IDX_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[f1]">ENC0_WDG_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[73]">ENC0_WDG_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[f3]">ENC1_COMPARE_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[75]">ENC1_COMPARE_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[f4]">ENC1_HOME_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[76]">ENC1_HOME_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[f6]">ENC1_IDX_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[78]">ENC1_IDX_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[f5]">ENC1_WDG_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[77]">ENC1_WDG_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[ff]">FLASH_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[81]">FLASH_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[97]">FLEXCOMM0_DriverIRQHandler</a> from fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[19]">FLEXCOMM0_IRQHandler</a> from main.o(.text.FLEXCOMM0_IRQHandler) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[98]">FLEXCOMM1_DriverIRQHandler</a> from fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[1a]">FLEXCOMM1_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[99]">FLEXCOMM2_DriverIRQHandler</a> from fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[1b]">FLEXCOMM2_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[9a]">FLEXCOMM3_DriverIRQHandler</a> from fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[1c]">FLEXCOMM3_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[9b]">FLEXCOMM4_DriverIRQHandler</a> from fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[1d]">FLEXCOMM4_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[9c]">FLEXCOMM5_DriverIRQHandler</a> from fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[1e]">FLEXCOMM5_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[9d]">FLEXCOMM6_DriverIRQHandler</a> from fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[1f]">FLEXCOMM6_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[9e]">FLEXCOMM7_DriverIRQHandler</a> from fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[20]">FLEXCOMM7_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[c4]">FLEXCOMM8_DriverIRQHandler</a> from fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[46]">FLEXCOMM8_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[d9]">FLEXPWM0_CAPTURE_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[5b]">FLEXPWM0_CAPTURE_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[dc]">FLEXPWM0_COMPARE0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[5e]">FLEXPWM0_COMPARE0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[de]">FLEXPWM0_COMPARE1_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[60]">FLEXPWM0_COMPARE1_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[e0]">FLEXPWM0_COMPARE2_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[62]">FLEXPWM0_COMPARE2_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[e2]">FLEXPWM0_COMPARE3_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[64]">FLEXPWM0_COMPARE3_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[da]">FLEXPWM0_FAULT_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[5c]">FLEXPWM0_FAULT_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[dd]">FLEXPWM0_RELOAD0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[5f]">FLEXPWM0_RELOAD0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[df]">FLEXPWM0_RELOAD1_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[61]">FLEXPWM0_RELOAD1_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[e1]">FLEXPWM0_RELOAD2_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[63]">FLEXPWM0_RELOAD2_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[e3]">FLEXPWM0_RELOAD3_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[65]">FLEXPWM0_RELOAD3_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[db]">FLEXPWM0_RELOAD_ERROR_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[5d]">FLEXPWM0_RELOAD_ERROR_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[e4]">FLEXPWM1_CAPTURE_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[66]">FLEXPWM1_CAPTURE_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[e7]">FLEXPWM1_COMPARE0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[69]">FLEXPWM1_COMPARE0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[e9]">FLEXPWM1_COMPARE1_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[6b]">FLEXPWM1_COMPARE1_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[eb]">FLEXPWM1_COMPARE2_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[6d]">FLEXPWM1_COMPARE2_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[ed]">FLEXPWM1_COMPARE3_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[6f]">FLEXPWM1_COMPARE3_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[e5]">FLEXPWM1_FAULT_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[67]">FLEXPWM1_FAULT_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[e8]">FLEXPWM1_RELOAD0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[6a]">FLEXPWM1_RELOAD0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[ea]">FLEXPWM1_RELOAD1_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[6c]">FLEXPWM1_RELOAD1_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[ec]">FLEXPWM1_RELOAD2_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[6e]">FLEXPWM1_RELOAD2_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[ee]">FLEXPWM1_RELOAD3_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[70]">FLEXPWM1_RELOAD3_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[e6]">FLEXPWM1_RELOAD_ERROR_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[68]">FLEXPWM1_RELOAD_ERROR_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[b0]">FlexSPI0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[32]">FlexSPI0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[bd]">Freqme_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[3f]">Freqme_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[8b]">GINT0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[d]">GINT0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[8c]">GINT1_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[e]">GINT1_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[102]">HAL_UartReceiveBlocking</a> from fsl_adapter_usart.o(.text.HAL_UartReceiveBlocking) referenced 2 times from fsl_debug_console.o(.text.DbgConsole_Init)
 <LI><a href="#[101]">HAL_UartSendBlocking</a> from fsl_adapter_usart.o(.text.HAL_UartSendBlocking) referenced 2 times from fsl_debug_console.o(.text.DbgConsole_Init)
 <LI><a href="#[d6]">HSCMP0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[58]">HSCMP0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[d7]">HSCMP1_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[59]">HSCMP1_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[d8]">HSCMP2_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[5a]">HSCMP2_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[a3]">HWVAD0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[25]">HWVAD0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[2]">HardFault_Handler</a> from main.o(.text.HardFault_Handler) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[2]">HardFault_Handler</a> from main.o(.text.HardFault_Handler) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[c7]">I3C_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[49]">I3C_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[f7]">ITRC_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[79]">ITRC_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[92]">MRT0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[14]">MRT0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[1]">NMI_Handler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[1]">NMI_Handler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[af]">OS_EVENT_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[31]">OS_EVENT_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[8d]">PIN_INT0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[f]">PIN_INT0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[8e]">PIN_INT1_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[10]">PIN_INT1_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[8f]">PIN_INT2_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[11]">PIN_INT2_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[90]">PIN_INT3_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[12]">PIN_INT3_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[a9]">PIN_INT4_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[2b]">PIN_INT4_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[aa]">PIN_INT5_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[2c]">PIN_INT5_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[ab]">PIN_INT6_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[2d]">PIN_INT6_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[ac]">PIN_INT7_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[2e]">PIN_INT7_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[c0]">PKC_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[fa]">PKC_ERR_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[7c]">PKC_ERR_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[42]">PKC_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[c2]">POWERQUAD_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[44]">POWERQUAD_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[c1]">PUF_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[43]">PUF_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[100]">RAM_PARITY_ECC_ERR_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[82]">RAM_PARITY_ECC_ERR_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[a6]">RTC_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[28]">RTC_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[f8]">Reserved127_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[7a]">Reserved127_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[fb]">Reserved130_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[7d]">Reserved130_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[fc]">Reserved131_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[7e]">Reserved131_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[fd]">Reserved132_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[7f]">Reserved132_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[fe]">Reserved133_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[80]">Reserved133_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[a7]">Reserved46_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[29]">Reserved46_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[b1]">Reserved56_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[33]">Reserved56_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[b2]">Reserved57_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[34]">Reserved57_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[b3]">Reserved58_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[35]">Reserved58_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[b7]">Reserved62_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[39]">Reserved62_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[b8]">Reserved63_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[3a]">Reserved63_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[b9]">Reserved64_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[3b]">Reserved64_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[c6]">Reserved77_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[48]">Reserved77_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[c8]">Reserved79_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[4a]">Reserved79_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[c9]">Reserved80_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[4b]">Reserved80_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[cd]">Reserved84_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[4f]">Reserved84_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[ce]">Reserved85_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[50]">Reserved85_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[cf]">Reserved86_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[51]">Reserved86_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[d0]">Reserved87_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[52]">Reserved87_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[d1]">Reserved88_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[53]">Reserved88_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[d2]">Reserved89_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[54]">Reserved89_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[0]">Reset_Handler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[95]">SCT0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[17]">SCT0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[bb]">SEC_GPIO_INT0_IRQ0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[3d]">SEC_GPIO_INT0_IRQ0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[bc]">SEC_GPIO_INT0_IRQ1_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[3e]">SEC_GPIO_INT0_IRQ1_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[ba]">SEC_HYPERVISOR_CALL_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[3c]">SEC_HYPERVISOR_CALL_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[be]">SEC_VIO_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[40]">SEC_VIO_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[bf]">SHA_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[41]">SHA_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[b6]">SPI_FILTER_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[38]">SPI_FILTER_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[7]">SVC_Handler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[7]">SVC_Handler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[6]">SecureFault_Handler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[87]">SystemInit</a> from system_lpc55s36.o(.text.SystemInit) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[cb]">Tamper_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[4d]">Tamper_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[a5]">USB0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[27]">USB0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[a4]">USB0_NEEDCLK_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[26]">USB0_NEEDCLK_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[91]">UTICK0_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[13]">UTICK0_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[a8]">WAKEUP_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[2a]">WAKEUP_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[89]">WDT_BOD_DriverIRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[b]">WDT_BOD_IRQHandler</a> from startup_lpc55s36.o(.text) referenced from startup_lpc55s36.o(.isr_vector)
 <LI><a href="#[88]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_lpc55s36.o(.text)
 <LI><a href="#[10a]">dec_cb</a> from mcuboot.o(.text.dec_cb) referenced 2 times from mcuboot.o(.text.mcuboot_init)
 <LI><a href="#[10b]">fputc</a> from fsl_debug_console.o(.text.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[86]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[105]">mcuboot_complete</a> from main.o(.text.mcuboot_complete) referenced 2 times from main.o(.text.main)
 <LI><a href="#[104]">mcuboot_jump</a> from main.o(.text.mcuboot_jump) referenced 2 times from main.o(.text.main)
 <LI><a href="#[108]">mcuboot_reset</a> from main.o(.text.mcuboot_reset) referenced 2 times from main.o(.text.main)
 <LI><a href="#[103]">mcuboot_send</a> from main.o(.text.mcuboot_send) referenced 2 times from main.o(.text.main)
 <LI><a href="#[106]">memory_erase</a> from memory.o(.text.memory_erase) referenced 2 times from main.o(.text.main)
 <LI><a href="#[109]">memory_read</a> from memory.o(.text.memory_read) referenced 2 times from main.o(.text.main)
 <LI><a href="#[107]">memory_write</a> from memory.o(.text.memory_write) referenced 2 times from main.o(.text.main)
 <LI><a href="#[83]">reinvoke</a> from sbl_api.o(.text.reinvoke) referenced from sbl_api.o(.ARM.__at_0x400)
 <LI><a href="#[84]">set_update_flag</a> from sbl_api.o(.text.set_update_flag) referenced from sbl_api.o(.ARM.__at_0x400)
 <LI><a href="#[85]">test</a> from sbl_api.o(.text.test) referenced from sbl_api.o(.ARM.__at_0x400)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[88]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[153]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry4.o(.ARM.Collect$$$$00000003))

<P><STRONG><a name="[10d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[112]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[154]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[155]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[156]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[157]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[158]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[a1]"></a>ACMP_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[9f]"></a>ADC0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[a0]"></a>ADC1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[cc]"></a>Analog_Glitch_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[b4]"></a>CAN0_IRQ0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[b5]"></a>CAN0_IRQ1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[c5]"></a>CDOG_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[f9]"></a>CSSV2_ERR_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[ca]"></a>CSS_IRQ1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[93]"></a>CTIMER0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[94]"></a>CTIMER1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[ad]"></a>CTIMER2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[96]"></a>CTIMER3_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[ae]"></a>CTIMER4_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[d3]"></a>DAC0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[d4]"></a>DAC1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[d5]"></a>DAC2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[8a]"></a>DMA0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[c3]"></a>DMA1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[a2]"></a>DMIC_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[8]"></a>DebugMon_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[10c]"></a>DefaultISR</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP_DriverIRQHandler
</UL>

<P><STRONG><a name="[ef]"></a>ENC0_COMPARE_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[f0]"></a>ENC0_HOME_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[f2]"></a>ENC0_IDX_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[f1]"></a>ENC0_WDG_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[f3]"></a>ENC1_COMPARE_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[f4]"></a>ENC1_HOME_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[f6]"></a>ENC1_IDX_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[f5]"></a>ENC1_WDG_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[ff]"></a>FLASH_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[d9]"></a>FLEXPWM0_CAPTURE_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[dc]"></a>FLEXPWM0_COMPARE0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[de]"></a>FLEXPWM0_COMPARE1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[e0]"></a>FLEXPWM0_COMPARE2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[e2]"></a>FLEXPWM0_COMPARE3_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[da]"></a>FLEXPWM0_FAULT_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[dd]"></a>FLEXPWM0_RELOAD0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[df]"></a>FLEXPWM0_RELOAD1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[e1]"></a>FLEXPWM0_RELOAD2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[e3]"></a>FLEXPWM0_RELOAD3_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[db]"></a>FLEXPWM0_RELOAD_ERROR_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[e4]"></a>FLEXPWM1_CAPTURE_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[e7]"></a>FLEXPWM1_COMPARE0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[e9]"></a>FLEXPWM1_COMPARE1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[eb]"></a>FLEXPWM1_COMPARE2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[ed]"></a>FLEXPWM1_COMPARE3_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[e5]"></a>FLEXPWM1_FAULT_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[e8]"></a>FLEXPWM1_RELOAD0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[ea]"></a>FLEXPWM1_RELOAD1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[ec]"></a>FLEXPWM1_RELOAD2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[ee]"></a>FLEXPWM1_RELOAD3_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[e6]"></a>FLEXPWM1_RELOAD_ERROR_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[b0]"></a>FlexSPI0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[bd]"></a>Freqme_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[8b]"></a>GINT0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[8c]"></a>GINT1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[d6]"></a>HSCMP0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[d7]"></a>HSCMP1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[d8]"></a>HSCMP2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[a3]"></a>HWVAD0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[c7]"></a>I3C_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[f7]"></a>ITRC_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[92]"></a>MRT0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[af]"></a>OS_EVENT_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[8d]"></a>PIN_INT0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[8e]"></a>PIN_INT1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[8f]"></a>PIN_INT2_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[90]"></a>PIN_INT3_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[a9]"></a>PIN_INT4_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[aa]"></a>PIN_INT5_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[ab]"></a>PIN_INT6_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[ac]"></a>PIN_INT7_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[c0]"></a>PKC_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[fa]"></a>PKC_ERR_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[c2]"></a>POWERQUAD_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[c1]"></a>PUF_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[100]"></a>RAM_PARITY_ECC_ERR_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[a6]"></a>RTC_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[f8]"></a>Reserved127_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[fb]"></a>Reserved130_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[fc]"></a>Reserved131_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>Reserved132_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[fe]"></a>Reserved133_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[a7]"></a>Reserved46_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[b1]"></a>Reserved56_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[b2]"></a>Reserved57_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[b3]"></a>Reserved58_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[b7]"></a>Reserved62_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[b8]"></a>Reserved63_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[b9]"></a>Reserved64_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[c6]"></a>Reserved77_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[c8]"></a>Reserved79_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[c9]"></a>Reserved80_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[cd]"></a>Reserved84_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[ce]"></a>Reserved85_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[cf]"></a>Reserved86_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[d0]"></a>Reserved87_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[d1]"></a>Reserved88_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[d2]"></a>Reserved89_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[95]"></a>SCT0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[bb]"></a>SEC_GPIO_INT0_IRQ0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[bc]"></a>SEC_GPIO_INT0_IRQ1_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[ba]"></a>SEC_HYPERVISOR_CALL_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[be]"></a>SEC_VIO_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>SHA_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[b6]"></a>SPI_FILTER_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[6]"></a>SecureFault_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[cb]"></a>Tamper_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[a5]"></a>USB0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[a4]"></a>USB0_NEEDCLK_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[91]"></a>UTICK0_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[a8]"></a>WAKEUP_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[89]"></a>WDT_BOD_DriverIRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_lpc55s36.o(.text)
<LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_lpc55s36.o(.text)
<LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_lpc55s36.o(.text)
<LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_lpc55s36.o(.text)
<LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[b]"></a>WDT_BOD_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[c]"></a>DMA0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[d]"></a>GINT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[e]"></a>GINT1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[f]"></a>PIN_INT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[10]"></a>PIN_INT1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[11]"></a>PIN_INT2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[12]"></a>PIN_INT3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[13]"></a>UTICK0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[14]"></a>MRT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[15]"></a>CTIMER0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[16]"></a>CTIMER1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[17]"></a>SCT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[18]"></a>CTIMER3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[1a]"></a>FLEXCOMM1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[1b]"></a>FLEXCOMM2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[1c]"></a>FLEXCOMM3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[1d]"></a>FLEXCOMM4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[1e]"></a>FLEXCOMM5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[1f]"></a>FLEXCOMM6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[20]"></a>FLEXCOMM7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[21]"></a>ADC0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[22]"></a>ADC1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[23]"></a>ACMP_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[24]"></a>DMIC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[25]"></a>HWVAD0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[26]"></a>USB0_NEEDCLK_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[27]"></a>USB0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[28]"></a>RTC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[29]"></a>Reserved46_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[2a]"></a>WAKEUP_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[2b]"></a>PIN_INT4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[2c]"></a>PIN_INT5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[2d]"></a>PIN_INT6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[2e]"></a>PIN_INT7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[2f]"></a>CTIMER2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[30]"></a>CTIMER4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[31]"></a>OS_EVENT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[32]"></a>FlexSPI0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[33]"></a>Reserved56_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[34]"></a>Reserved57_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[35]"></a>Reserved58_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[36]"></a>CAN0_IRQ0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[37]"></a>CAN0_IRQ1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[38]"></a>SPI_FILTER_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[39]"></a>Reserved62_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[3a]"></a>Reserved63_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[3b]"></a>Reserved64_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[3c]"></a>SEC_HYPERVISOR_CALL_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[3d]"></a>SEC_GPIO_INT0_IRQ0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[3e]"></a>SEC_GPIO_INT0_IRQ1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[3f]"></a>Freqme_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[40]"></a>SEC_VIO_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[41]"></a>SHA_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[42]"></a>PKC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[43]"></a>PUF_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[44]"></a>POWERQUAD_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[45]"></a>DMA1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[46]"></a>FLEXCOMM8_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[47]"></a>CDOG_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[48]"></a>Reserved77_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[49]"></a>I3C_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[4a]"></a>Reserved79_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[4b]"></a>Reserved80_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[4c]"></a>CSS_IRQ1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[4d]"></a>Tamper_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[4e]"></a>Analog_Glitch_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[4f]"></a>Reserved84_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[50]"></a>Reserved85_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[51]"></a>Reserved86_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[52]"></a>Reserved87_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[53]"></a>Reserved88_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[54]"></a>Reserved89_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[55]"></a>DAC0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[56]"></a>DAC1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[57]"></a>DAC2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[58]"></a>HSCMP0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[59]"></a>HSCMP1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[5a]"></a>HSCMP2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[5b]"></a>FLEXPWM0_CAPTURE_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[5c]"></a>FLEXPWM0_FAULT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[5d]"></a>FLEXPWM0_RELOAD_ERROR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[5e]"></a>FLEXPWM0_COMPARE0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[5f]"></a>FLEXPWM0_RELOAD0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[60]"></a>FLEXPWM0_COMPARE1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[61]"></a>FLEXPWM0_RELOAD1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[62]"></a>FLEXPWM0_COMPARE2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[63]"></a>FLEXPWM0_RELOAD2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[64]"></a>FLEXPWM0_COMPARE3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[65]"></a>FLEXPWM0_RELOAD3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[66]"></a>FLEXPWM1_CAPTURE_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[67]"></a>FLEXPWM1_FAULT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[68]"></a>FLEXPWM1_RELOAD_ERROR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[69]"></a>FLEXPWM1_COMPARE0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[6a]"></a>FLEXPWM1_RELOAD0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[6b]"></a>FLEXPWM1_COMPARE1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[6c]"></a>FLEXPWM1_RELOAD1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[6d]"></a>FLEXPWM1_COMPARE2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[6e]"></a>FLEXPWM1_RELOAD2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[6f]"></a>FLEXPWM1_COMPARE3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[70]"></a>FLEXPWM1_RELOAD3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[71]"></a>ENC0_COMPARE_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[72]"></a>ENC0_HOME_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[73]"></a>ENC0_WDG_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[74]"></a>ENC0_IDX_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[75]"></a>ENC1_COMPARE_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[76]"></a>ENC1_HOME_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[77]"></a>ENC1_WDG_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[78]"></a>ENC1_IDX_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[79]"></a>ITRC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[7a]"></a>Reserved127_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[7b]"></a>CSSV2_ERR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[7c]"></a>PKC_ERR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[7d]"></a>Reserved130_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[7e]"></a>Reserved131_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[7f]"></a>Reserved132_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[80]"></a>Reserved133_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[81]"></a>FLASH_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[82]"></a>RAM_PARITY_ECC_ERR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, startup_lpc55s36.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[10f]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[159]"></a>___aeabi_memcpy4$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memcpy.o(.text), UNUSED)

<P><STRONG><a name="[15a]"></a>___aeabi_memcpy8$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memcpy.o(.text), UNUSED)

<P><STRONG><a name="[15b]"></a>__aeabi_memcpy</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, memcpy.o(.text), UNUSED)

<P><STRONG><a name="[124]"></a>memcpy</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Vprintf
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcuboot_proc
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_write
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_copy
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_create_cmd_packet
</UL>

<P><STRONG><a name="[132]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memset
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetDefaultConfig
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_decode_init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_create_cmd_packet
</UL>

<P><STRONG><a name="[123]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Vprintf
</UL>

<P><STRONG><a name="[111]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[15c]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[110]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[15d]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[10e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[15e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>BOARD_BootClockFROHF96M</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, clock_config.o(.text.BOARD_BootClockFROHF96M))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BOARD_BootClockFROHF96M &rArr; POWER_SetVoltageForFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetFLASHAccessCyclesForFreq
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_SetVoltageForFreq
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetupFROClocking
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_PowerInit
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_AttachClk
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetClkDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11a]"></a>BOARD_InitDebugConsole</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, board.o(.text.BOARD_InitDebugConsole))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = BOARD_InitDebugConsole &rArr; DbgConsole_Init &rArr; HAL_UartInit &rArr; USART_Init &rArr; USART_SetBaudRate &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_ClearPeripheralReset
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_AttachClk
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13f]"></a>BOARD_InitPins</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, pin_mux.o(.text.BOARD_InitPins))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[116]"></a>CLOCK_AttachClk</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, fsl_clock.o(.text.CLOCK_AttachClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_AttachClk
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockFROHF96M
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11d]"></a>CLOCK_GetClockOutClkFreq</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, fsl_clock.o(.text.CLOCK_GetClockOutClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_GetClockOutClkFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreSysClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[11e]"></a>CLOCK_GetCoreSysClkFreq</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetClockOutClkFreq
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>

<P><STRONG><a name="[11f]"></a>CLOCK_GetFreq</STRONG> (Thumb, 292 bytes, Stack size 8 bytes, fsl_clock.o(.text.CLOCK_GetFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_GetFreq &rArr; CLOCK_GetClockOutClkFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetCoreSysClkFreq
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetClockOutClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[119]"></a>CLOCK_SetClkDiv</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, fsl_clock.o(.text.CLOCK_SetClkDiv))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockFROHF96M
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[118]"></a>CLOCK_SetFLASHAccessCyclesForFreq</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fsl_clock.o(.text.CLOCK_SetFLASHAccessCyclesForFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLOCK_SetFLASHAccessCyclesForFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockFROHF96M
</UL>

<P><STRONG><a name="[115]"></a>CLOCK_SetupFROClocking</STRONG> (Thumb, 134 bytes, Stack size 12 bytes, fsl_clock.o(.text.CLOCK_SetupFROClocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CLOCK_SetupFROClocking
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockFROHF96M
</UL>

<P><STRONG><a name="[11c]"></a>DbgConsole_Init</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, fsl_debug_console.o(.text.DbgConsole_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = DbgConsole_Init &rArr; HAL_UartInit &rArr; USART_Init &rArr; USART_SetBaudRate &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartInit
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
</UL>

<P><STRONG><a name="[121]"></a>DbgConsole_Printf</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, fsl_debug_console.o(.text.DbgConsole_Printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[122]"></a>DbgConsole_Vprintf</STRONG> (Thumb, 1030 bytes, Stack size 104 bytes, fsl_debug_console.o(.text.DbgConsole_Vprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
</UL>

<P><STRONG><a name="[14c]"></a>FLASH_Erase</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fsl_flash.o(.text.FLASH_Erase))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_erase
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_copy
</UL>

<P><STRONG><a name="[14d]"></a>FLASH_Init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, fsl_flash.o(.text.FLASH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_init
</UL>

<P><STRONG><a name="[14b]"></a>FLASH_Program</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fsl_flash.o(.text.FLASH_Program))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_write
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_copy
</UL>

<P><STRONG><a name="[14e]"></a>FLASH_Read</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fsl_flash.o(.text.FLASH_Read))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_read
</UL>

<P><STRONG><a name="[97]"></a>FLEXCOMM0_DriverIRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, fsl_flexcomm.o(.text.FLEXCOMM0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FLEXCOMM0_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[19]"></a>FLEXCOMM0_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, main.o(.text.FLEXCOMM0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FLEXCOMM0_IRQHandler &rArr; mcuboot_recv &rArr; kptl_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcuboot_recv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[98]"></a>FLEXCOMM1_DriverIRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, fsl_flexcomm.o(.text.FLEXCOMM1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FLEXCOMM1_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[99]"></a>FLEXCOMM2_DriverIRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, fsl_flexcomm.o(.text.FLEXCOMM2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FLEXCOMM2_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[9a]"></a>FLEXCOMM3_DriverIRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, fsl_flexcomm.o(.text.FLEXCOMM3_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FLEXCOMM3_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[9b]"></a>FLEXCOMM4_DriverIRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, fsl_flexcomm.o(.text.FLEXCOMM4_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FLEXCOMM4_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[9c]"></a>FLEXCOMM5_DriverIRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, fsl_flexcomm.o(.text.FLEXCOMM5_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FLEXCOMM5_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[9d]"></a>FLEXCOMM6_DriverIRQHandler</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, fsl_flexcomm.o(.text.FLEXCOMM6_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FLEXCOMM6_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[9e]"></a>FLEXCOMM7_DriverIRQHandler</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, fsl_flexcomm.o(.text.FLEXCOMM7_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FLEXCOMM7_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[c4]"></a>FLEXCOMM8_DriverIRQHandler</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, fsl_flexcomm.o(.text.FLEXCOMM8_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FLEXCOMM8_DriverIRQHandler &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[127]"></a>FLEXCOMM_Init</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, fsl_flexcomm.o(.text.FLEXCOMM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = FLEXCOMM_Init &rArr; RESET_PeripheralReset &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_PeripheralReset
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[129]"></a>GPIO_PinInit</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, fsl_gpio.o(.text.GPIO_PinInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GPIO_PinInit &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12a]"></a>GPIO_PortInit</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, fsl_gpio.o(.text.GPIO_PortInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GPIO_PortInit &rArr; RESET_PeripheralReset &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_PeripheralReset
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[120]"></a>HAL_UartInit</STRONG> (Thumb, 220 bytes, Stack size 48 bytes, fsl_adapter_usart.o(.text.HAL_UartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = HAL_UartInit &rArr; USART_Init &rArr; USART_SetBaudRate &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetDefaultConfig
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Init
</UL>

<P><STRONG><a name="[102]"></a>HAL_UartReceiveBlocking</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, fsl_adapter_usart.o(.text.HAL_UartReceiveBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = HAL_UartReceiveBlocking &rArr; USART_ReadBlocking &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadBlocking
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsl_debug_console.o(.text.DbgConsole_Init)
</UL>
<P><STRONG><a name="[101]"></a>HAL_UartSendBlocking</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, fsl_adapter_usart.o(.text.HAL_UartSendBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HAL_UartSendBlocking &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_WriteBlocking
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fsl_debug_console.o(.text.DbgConsole_Init)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HardFault_Handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> startup_lpc55s36.o(.text)
<LI> startup_lpc55s36.o(.isr_vector)
</UL>
<P><STRONG><a name="[114]"></a>POWER_PowerInit</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, fsl_power.o(.text.POWER_PowerInit))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockFROHF96M
</UL>

<P><STRONG><a name="[117]"></a>POWER_SetVoltageForFreq</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, fsl_power.o(.text.POWER_SetVoltageForFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = POWER_SetVoltageForFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_SetVoltageForProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockFROHF96M
</UL>

<P><STRONG><a name="[11b]"></a>RESET_ClearPeripheralReset</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, fsl_reset.o(.text.RESET_ClearPeripheralReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = RESET_ClearPeripheralReset &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
</UL>

<P><STRONG><a name="[128]"></a>RESET_PeripheralReset</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, fsl_reset.o(.text.RESET_PeripheralReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = RESET_PeripheralReset &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM_Init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PortInit
</UL>

<P><STRONG><a name="[87]"></a>SystemInit</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, system_lpc55s36.o(.text.SystemInit))
<BR><BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInitHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc55s36.o(.text)
</UL>
<P><STRONG><a name="[131]"></a>SystemInitHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_lpc55s36.o(.text.SystemInitHook))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[12b]"></a>USART_GetDefaultConfig</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, fsl_usart.o(.text.USART_GetDefaultConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = USART_GetDefaultConfig &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartInit
</UL>

<P><STRONG><a name="[12c]"></a>USART_Init</STRONG> (Thumb, 372 bytes, Stack size 16 bytes, fsl_usart.o(.text.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = USART_Init &rArr; USART_SetBaudRate &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SetBaudRate
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM_Init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartInit
</UL>

<P><STRONG><a name="[12d]"></a>USART_ReadBlocking</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, fsl_usart.o(.text.USART_ReadBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = USART_ReadBlocking &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartReceiveBlocking
</UL>

<P><STRONG><a name="[133]"></a>USART_SetBaudRate</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, fsl_usart.o(.text.USART_SetBaudRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = USART_SetBaudRate &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[12e]"></a>USART_WriteBlocking</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, fsl_usart.o(.text.USART_WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = USART_WriteBlocking &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartSendBlocking
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcuboot_send
</UL>

<P><STRONG><a name="[125]"></a>__aeabi_assert</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fsl_assert.o(.text.__aeabi_assert))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgConsole_Printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM8_DriverIRQHandler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM7_DriverIRQHandler
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM6_DriverIRQHandler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM5_DriverIRQHandler
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM4_DriverIRQHandler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM3_DriverIRQHandler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM2_DriverIRQHandler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM1_DriverIRQHandler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM0_DriverIRQHandler
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadBlocking
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetDefaultConfig
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SetBaudRate
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM_Init
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_PeripheralReset
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartReceiveBlocking
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartSendBlocking
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UartInit
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RESET_ClearPeripheralReset
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_WriteBlocking
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PortInit
</UL>

<P><STRONG><a name="[139]"></a>crc32_complete</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, crc32.o(.text.crc32_complete))
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_scan
</UL>

<P><STRONG><a name="[138]"></a>crc32_generate</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, crc32.o(.text.crc32_generate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crc32_generate
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_scan
</UL>

<P><STRONG><a name="[137]"></a>crc32_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, crc32.o(.text.crc32_init))
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_scan
</UL>

<P><STRONG><a name="[134]"></a>dump_hdr</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, dimage.o(.text.dump_hdr))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dump_hdr &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10b]"></a>fputc</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, fsl_debug_console.o(.text.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[135]"></a>image_get_hdr</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, dimage.o(.text.image_get_hdr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = image_get_hdr
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_read
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[136]"></a>image_scan</STRONG> (Thumb, 560 bytes, Stack size 200 bytes, dimage.o(.text.image_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = image_scan &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_read
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_complete
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_generate
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32_init
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[147]"></a>kptl_create_ack</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, kptl.o(.text.kptl_create_ack))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcuboot_proc
</UL>

<P><STRONG><a name="[13a]"></a>kptl_create_cmd_packet</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, kptl.o(.text.kptl_create_cmd_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kptl_create_cmd_packet &rArr; kptl_frame_packet_final
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_frame_packet_final
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_create_property_resp_packet
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_create_generic_resp_packet
</UL>

<P><STRONG><a name="[13c]"></a>kptl_create_generic_resp_packet</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, kptl.o(.text.kptl_create_generic_resp_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = kptl_create_generic_resp_packet &rArr; kptl_create_cmd_packet &rArr; kptl_frame_packet_final
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_create_cmd_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcuboot_proc
</UL>

<P><STRONG><a name="[146]"></a>kptl_create_ping_resp_packet</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, kptl.o(.text.kptl_create_ping_resp_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kptl_create_ping_resp_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcuboot_proc
</UL>

<P><STRONG><a name="[13d]"></a>kptl_create_property_resp_packet</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, kptl.o(.text.kptl_create_property_resp_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = kptl_create_property_resp_packet &rArr; kptl_create_cmd_packet &rArr; kptl_frame_packet_final
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_create_cmd_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcuboot_proc
</UL>

<P><STRONG><a name="[149]"></a>kptl_decode</STRONG> (Thumb, 424 bytes, Stack size 24 bytes, kptl.o(.text.kptl_decode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kptl_decode
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcuboot_recv
</UL>

<P><STRONG><a name="[13e]"></a>kptl_decode_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, kptl.o(.text.kptl_decode_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kptl_decode_init &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcuboot_init
</UL>

<P><STRONG><a name="[13b]"></a>kptl_frame_packet_final</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, kptl.o(.text.kptl_frame_packet_final))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kptl_frame_packet_final
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_create_cmd_packet
</UL>

<P><STRONG><a name="[148]"></a>kptl_frame_packet_get_size</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kptl.o(.text.kptl_frame_packet_get_size))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcuboot_proc
</UL>

<P><STRONG><a name="[86]"></a>main</STRONG> (Thumb, 812 bytes, Stack size 80 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = main &rArr; BOARD_InitDebugConsole &rArr; DbgConsole_Init &rArr; HAL_UartInit &rArr; USART_Init &rArr; USART_SetBaudRate &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcuboot_proc
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcuboot_init
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_copy
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dump_hdr
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_get_hdr
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_scan
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbl_nvm_write
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbl_nvm_init
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinInit
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PortInit
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitDebugConsole
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_BootClockFROHF96M
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOARD_InitPins
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_AttachClk
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_SetClkDiv
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reinvoke
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[144]"></a>mcuboot_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, mcuboot.o(.text.mcuboot_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mcuboot_init &rArr; kptl_decode_init &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_decode_init
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[145]"></a>mcuboot_proc</STRONG> (Thumb, 536 bytes, Stack size 104 bytes, mcuboot.o(.text.mcuboot_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = mcuboot_proc &rArr; kptl_create_generic_resp_packet &rArr; kptl_create_cmd_packet &rArr; kptl_frame_packet_final
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_frame_packet_get_size
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_create_ping_resp_packet
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_create_property_resp_packet
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_create_generic_resp_packet
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_create_ack
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[126]"></a>mcuboot_recv</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, mcuboot.o(.text.mcuboot_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mcuboot_recv &rArr; kptl_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kptl_decode
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLEXCOMM0_IRQHandler
</UL>

<P><STRONG><a name="[143]"></a>memory_copy</STRONG> (Thumb, 260 bytes, Stack size 48 bytes, memory.o(.text.memory_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = memory_copy &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Erase
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[106]"></a>memory_erase</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, memory.o(.text.memory_erase))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_update_flag
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbl_nvm_write
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbl_nvm_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[140]"></a>memory_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, memory.o(.text.memory_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = memory_init &rArr; FLASH_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_GetFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[109]"></a>memory_read</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, memory.o(.text.memory_read))
<BR><BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_get_hdr
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_scan
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbl_nvm_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[107]"></a>memory_write</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, memory.o(.text.memory_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = memory_write &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_update_flag
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbl_nvm_write
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbl_nvm_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[83]"></a>reinvoke</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sbl_api.o(.text.reinvoke))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = reinvoke &rArr; main &rArr; BOARD_InitDebugConsole &rArr; DbgConsole_Init &rArr; HAL_UartInit &rArr; USART_Init &rArr; USART_SetBaudRate &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sbl_api.o(.ARM.__at_0x400)
</UL>
<P><STRONG><a name="[141]"></a>sbl_nvm_init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, sbl_api.o(.text.sbl_nvm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sbl_nvm_init &rArr; memory_write &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_read
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_write
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[142]"></a>sbl_nvm_write</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, sbl_api.o(.text.sbl_nvm_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sbl_nvm_write &rArr; memory_write &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_write
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcuboot_complete
</UL>

<P><STRONG><a name="[84]"></a>set_update_flag</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, sbl_api.o(.text.set_update_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = set_update_flag &rArr; memory_write &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_write
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memory_erase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sbl_api.o(.ARM.__at_0x400)
</UL>
<P><STRONG><a name="[85]"></a>test</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sbl_api.o(.text.test))
<BR>[Address Reference Count : 1]<UL><LI> sbl_api.o(.ARM.__at_0x400)
</UL>
<P><STRONG><a name="[14f]"></a>__0printf$8</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[15f]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[12f]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dump_hdr
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;image_scan
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcuboot_jump
</UL>

<P><STRONG><a name="[160]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[161]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[162]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[103]"></a>mcuboot_send</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(.text.mcuboot_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = mcuboot_send &rArr; USART_WriteBlocking &rArr; __aeabi_assert &rArr; DbgConsole_Printf &rArr; DbgConsole_Vprintf &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_WriteBlocking
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[104]"></a>mcuboot_jump</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, main.o(.text.mcuboot_jump))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mcuboot_jump &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[105]"></a>mcuboot_complete</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, main.o(.text.mcuboot_complete))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mcuboot_complete &rArr; sbl_nvm_write &rArr; memory_write &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbl_nvm_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[108]"></a>mcuboot_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(.text.mcuboot_reset))
<BR><BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[14a]"></a>__NVIC_SystemReset</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(.text.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcuboot_reset
</UL>

<P><STRONG><a name="[130]"></a>POWER_SetVoltageForProcess</STRONG> (Thumb, 950 bytes, Stack size 0 bytes, fsl_power.o(.text.POWER_SetVoltageForProcess))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_SetVoltageForFreq
</UL>

<P><STRONG><a name="[10a]"></a>dec_cb</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mcuboot.o(.text.dec_cb))
<BR>[Address Reference Count : 1]<UL><LI> mcuboot.o(.text.mcuboot_init)
</UL>
<P><STRONG><a name="[150]"></a>_printf_core</STRONG> (Thumb, 996 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[152]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[151]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
